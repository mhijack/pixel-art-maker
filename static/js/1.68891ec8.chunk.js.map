{"version":3,"sources":["components/Canvas/Pixel/Pixel.js","components/Canvas/Canvas.js"],"names":["Pixel","_ref","id","backgroundColor","onMouseEnter","style","react_default","a","createElement","className","onMouseDown","Canvas","e","preventDefault","buttons","_this","paintPixel","target","props","primaryColor","secondaryColor","color","_this2","this","pixels","pcs","map","row","pixel","drawnColor","Canvas_Pixel_Pixel","key","gridStyle","display","gridTemplateColumns","concat","length","Component"],"mappings":"yMAyBeA,UArBD,SAAAC,GAA2C,IAAxCC,EAAwCD,EAAxCC,GAAIC,EAAoCF,EAApCE,gBAAiBC,EAAmBH,EAAnBG,aAE5BC,EAAQ,CACVF,gBACwB,OAApBA,EACMD,EAAK,IAAM,EACP,QACA,UACJC,GAGd,OACIG,EAAAC,EAAAC,cAAA,OACIC,UAAU,QACVJ,MAAOA,EACPD,aAAcA,EACdM,YAAaN,MCdnBO,qNAIFP,aAAe,SAAAQ,GAEX,OADAA,EAAEC,iBACMD,EAAEE,SACN,KAAK,EAED,YADAC,EAAKC,WAAWJ,EAAEK,OAAQF,EAAKG,MAAMC,cAEzC,KAAK,EAED,YADAJ,EAAKC,WAAWJ,EAAEK,OAAQF,EAAKG,MAAME,gBAEzC,QACI,WASZJ,WAAa,SAACC,EAAQI,GAClBJ,EAAOZ,MAAMF,gBAAkBkB,2EAG1B,IAAAC,EAAAC,KACGC,EAAWD,KAAKL,MAAhBM,OAKFC,EAAMD,EAAOE,IAAI,SAAAC,GACnB,OAAOA,EAAID,IAAI,SAAAE,GAAS,IACZ1B,EAAoC0B,EAApC1B,GAAgBC,EAAoByB,EAAhCC,WAEZ,OACIvB,EAAAC,EAAAC,cAACsB,EAAD,CACIC,IAAK7B,EACLA,GAAIA,EACJC,gBAAiBA,EACjBC,aAAckB,EAAKlB,aACnBM,YAAaY,EAAKlB,mBAS5B4B,EAAY,CACdC,QAAS,OACTC,oBAAmB,UAAAC,OAAYX,EAAOY,OAAnB,mBAGvB,OACI9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBJ,MAAO2B,GACrCP,UA3DIY,cAiEN1B","file":"static/js/1.68891ec8.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Pixel.css\";\n\nconst Pixel = ({ id, backgroundColor, onMouseEnter }) => {\n    // only set backgroundColor if user painted; otherwise show alternating white and grey pattern\n    const style = {\n        backgroundColor:\n            backgroundColor === null\n                ? id % 2 === 0\n                    ? \"white\"\n                    : \"#DBDCE0\"\n                : backgroundColor\n    };\n\n    return (\n        <div\n            className=\"pixel\"\n            style={style}\n            onMouseEnter={onMouseEnter}\n            onMouseDown={onMouseEnter}\n        />\n    );\n};\n\nexport default Pixel;\n","import React, { Component } from \"react\";\n\nimport Pixel from \"./Pixel/Pixel\";\n\nimport \"./Canvas.css\";\n\nclass Canvas extends Component {\n    /*\n        Paint block if hover over pixel && mouse down\n    */\n    onMouseEnter = e => {\n        e.preventDefault();\n        switch (e.buttons) {\n            case 1:\n                this.paintPixel(e.target, this.props.primaryColor);\n                return;\n            case 2:\n                this.paintPixel(e.target, this.props.secondaryColor);\n                return;\n            default:\n                return;\n        }\n    };\n\n    /*\n        Paint the target pixel.\n        @param {DOMNode, String}\n        @return {void}\n    */\n    paintPixel = (target, color) => {\n        target.style.backgroundColor = color;\n    };\n\n    render() {\n        const { pixels } = this.props;\n\n        /*\n            Generating pixel list\n        */\n        const pcs = pixels.map(row => {\n            return row.map(pixel => {\n                const { id, drawnColor: backgroundColor } = pixel;\n\n                return (\n                    <Pixel\n                        key={id}\n                        id={id}\n                        backgroundColor={backgroundColor}\n                        onMouseEnter={this.onMouseEnter}\n                        onMouseDown={this.onMouseEnter}\n                    />\n                );\n            });\n        });\n\n        /*\n            Assemble canvas grid\n        */\n        const gridStyle = {\n            display: \"grid\",\n            gridTemplateColumns: `repeat(${pixels.length}, min-content)`\n        };\n\n        return (\n            <div className=\"canvas__container\" style={gridStyle}>\n                {pcs}\n            </div>\n        );\n    }\n}\n\nexport default Canvas;\n"],"sourceRoot":""}